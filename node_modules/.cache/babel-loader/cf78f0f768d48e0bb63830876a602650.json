{"ast":null,"code":"var _jsxFileName = \"/Users/hoaito/Desktop/music/src/components/MusicCategory/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box, CardActionArea, CardContent, CardMedia, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { ThemeProvider, useTheme } from \"@material-ui/core/styles\";\nimport React, { useEffect } from \"react\";\nimport useStyles from \"../style\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { BrowserRouter as Router, Route, Switch, useRouteMatch, Link } from \"react-router-dom\";\nimport CategoryList from \"../CategoryList\";\nimport MusicList from \"../MusicList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nMusicCategory.propTypes = {};\n\nfunction MusicCategory(props) {\n  _s();\n\n  const {\n    musics,\n    selectMusic,\n    setSelectMusic,\n    indexRef,\n    country,\n    setCountry,\n    kindOfMusic,\n    setKindOfMusic,\n    play,\n    setPlay,\n    firstTimeRef\n  } = props;\n  const match = useRouteMatch();\n  useEffect(() => {\n    const newPlay = {\n      isPlay: false,\n      title: \"Play\"\n    };\n    setPlay(newPlay);\n    return;\n  }, []);\n  const theme = useTheme();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          sm: 8,\n          style: {\n            backgroundColor: \"transparent\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.list,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.card,\n              style: {\n                // backgroundImage: \"linear-gradient(to bottom, #ad5389, #3c1053)\",\n                backgroundColor: \"transparent\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: Object.keys(musics.songs).map(ms => {\n                    let category = {};\n\n                    if (ms === \"top100_VN\") {\n                      category = {\n                        title: \"Top 100 Việt Nam\",\n                        categoryImg: \"https://i.scdn.co/image/ab67706f00000003176473996390e4cedcda7d18\"\n                      };\n                    }\n\n                    if (ms === \"top100_AM\") {\n                      category = {\n                        title: \"Top 100 American\",\n                        categoryImg: \"https://avatar-ex-swe.nixcdn.com/playlist/2015/11/23/d/9/e/f/1448272273014_500.jpg\"\n                      };\n                    }\n\n                    if (ms === \"top100_KL\") {\n                      category = {\n                        title: \"Top 100 Không Lời\",\n                        categoryImg: \"https://direct.rhapsody.com/imageserver/images/alb.253168725/500x500.jpg\"\n                      };\n                    }\n\n                    if (ms === \"top100_CA\") {\n                      category = {\n                        title: \"Top 100 Châu Á\",\n                        categoryImg: \"https://m.media-amazon.com/images/I/71sp2RipbDL._SS500_.jpg\"\n                      };\n                    }\n\n                    return /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 6,\n                      sm: 6,\n                      alignItems: \"center\",\n                      className: classes.flexItem,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"category/\" + ms,\n                        children: [/*#__PURE__*/_jsxDEV(Card, {\n                          className: classes.categoryItem,\n                          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                              component: \"img\",\n                              alt: \"Contemplative Reptile\",\n                              height: \"100\",\n                              image: category.categoryImg,\n                              title: \"Contemplative Reptile\",\n                              className: classes.media\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 125,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 124,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 123,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          style: {\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                            display: \"-webkit-box\",\n                            boxOrient: \"vertical\",\n                            lineClamp: 1,\n                            wordBreak: \"break-all\",\n                            overflow: \"hidden\",\n                            paddingTop: \"5px\",\n                            color: \"white\"\n                          },\n                          children: category.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 135,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:paramID`,\n      children: /*#__PURE__*/_jsxDEV(CategoryList, {\n        musics: musics,\n        selectMusic: selectMusic,\n        setSelectMusic: setSelectMusic,\n        indexRef: indexRef,\n        country: country,\n        setCountry: setCountry,\n        kindOfMusic: kindOfMusic,\n        setKindOfMusic: setKindOfMusic,\n        play: play,\n        setPlay: setPlay,\n        firstTimeRef: firstTimeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MusicCategory, \"si2zSi99sIHG0+RaaI74LzTYqBU=\", false, function () {\n  return [useRouteMatch, useTheme, useStyles];\n});\n\n_c = MusicCategory;\nexport default MusicCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicCategory\");","map":{"version":3,"sources":["/Users/hoaito/Desktop/music/src/components/MusicCategory/index.jsx"],"names":["Box","CardActionArea","CardContent","CardMedia","Grid","Paper","Typography","ThemeProvider","useTheme","React","useEffect","useStyles","makeStyles","Card","CardActions","Button","BrowserRouter","Router","Route","Switch","useRouteMatch","Link","CategoryList","MusicList","MusicCategory","propTypes","props","musics","selectMusic","setSelectMusic","indexRef","country","setCountry","kindOfMusic","setKindOfMusic","play","setPlay","firstTimeRef","match","newPlay","isPlay","title","theme","classes","path","backgroundColor","list","card","Object","keys","songs","map","ms","category","categoryImg","flexItem","categoryItem","media","whiteSpace","overflow","textOverflow","display","boxOrient","lineClamp","wordBreak","paddingTop","color"],"mappings":"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","sourcesContent":["import {\n  Box,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grid,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { ThemeProvider, useTheme } from \"@material-ui/core/styles\";\nimport React, { useEffect } from \"react\";\nimport useStyles from \"../style\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport Button from \"@material-ui/core/Button\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useRouteMatch,\n  Link,\n} from \"react-router-dom\";\nimport CategoryList from \"../CategoryList\";\nimport MusicList from \"../MusicList\";\n\nMusicCategory.propTypes = {};\n\nfunction MusicCategory(props) {\n  const {\n    musics,\n    selectMusic,\n    setSelectMusic,\n    indexRef,\n    country,\n    setCountry,\n    kindOfMusic,\n    setKindOfMusic,\n    play,\n    setPlay,\n    firstTimeRef,\n  } = props;\n\n  const match = useRouteMatch();\n  useEffect(() => {\n    const newPlay = {\n      isPlay: false,\n      title: \"Play\",\n    };\n    setPlay(newPlay);\n\n    return;\n  }, []);\n\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <Switch>\n      <Route path={match.path} exact>\n        <ThemeProvider theme={theme}>\n          <Grid\n            item\n            xs={8}\n            sm={8}\n            style={{\n              backgroundColor: \"transparent\",\n            }}\n          >\n            <div className={classes.list}>\n              <Paper\n                className={classes.card}\n                style={{\n                  // backgroundImage: \"linear-gradient(to bottom, #ad5389, #3c1053)\",\n                  backgroundColor: \"transparent\",\n                }}\n              >\n                <Grid item sm={12}>\n                  <Grid container spacing={2}>\n                    {Object.keys(musics.songs).map((ms) => {\n                      let category = {};\n                      if (ms === \"top100_VN\") {\n                        category = {\n                          title: \"Top 100 Việt Nam\",\n                          categoryImg:\n                            \"https://i.scdn.co/image/ab67706f00000003176473996390e4cedcda7d18\",\n                        };\n                      }\n                      if (ms === \"top100_AM\") {\n                        category = {\n                          title: \"Top 100 American\",\n                          categoryImg:\n                            \"https://avatar-ex-swe.nixcdn.com/playlist/2015/11/23/d/9/e/f/1448272273014_500.jpg\",\n                        };\n                      }\n                      if (ms === \"top100_KL\") {\n                        category = {\n                          title: \"Top 100 Không Lời\",\n                          categoryImg:\n                            \"https://direct.rhapsody.com/imageserver/images/alb.253168725/500x500.jpg\",\n                        };\n                      }\n                      if (ms === \"top100_CA\") {\n                        category = {\n                          title: \"Top 100 Châu Á\",\n                          categoryImg:\n                            \"https://m.media-amazon.com/images/I/71sp2RipbDL._SS500_.jpg\",\n                        };\n                      }\n\n                      return (\n                        <Grid\n                          item\n                          xs={6}\n                          sm={6}\n                          alignItems=\"center\"\n                          className={classes.flexItem}\n                        >\n                          <Link to={\"category/\" + ms}>\n                            <Card className={classes.categoryItem}>\n                              <CardActionArea>\n                                <CardMedia\n                                  component=\"img\"\n                                  alt=\"Contemplative Reptile\"\n                                  height=\"100\"\n                                  image={category.categoryImg}\n                                  title=\"Contemplative Reptile\"\n                                  className={classes.media}\n                                />\n                              </CardActionArea>\n                            </Card>\n                            <Typography\n                              style={{\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                                display: \"-webkit-box\",\n                                boxOrient: \"vertical\",\n                                lineClamp: 1,\n                                wordBreak: \"break-all\",\n                                overflow: \"hidden\",\n                                paddingTop: \"5px\",\n                                color: \"white\",\n                              }}\n                            >\n                              {category.title}\n                            </Typography>\n                          </Link>\n                        </Grid>\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              </Paper>\n            </div>\n          </Grid>\n        </ThemeProvider>\n      </Route>\n      <Route path={`${match.path}/:paramID`}>\n        <CategoryList\n          musics={musics}\n          selectMusic={selectMusic}\n          setSelectMusic={setSelectMusic}\n          indexRef={indexRef}\n          country={country}\n          setCountry={setCountry}\n          kindOfMusic={kindOfMusic}\n          setKindOfMusic={setKindOfMusic}\n          play={play}\n          setPlay={setPlay}\n          firstTimeRef={firstTimeRef}\n        />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default MusicCategory;\n"]},"metadata":{},"sourceType":"module"}